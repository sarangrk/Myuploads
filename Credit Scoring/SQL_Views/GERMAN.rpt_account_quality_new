
CREATE VIEW GERMAN.rpt_account_quality_new
AS LOCKING ROW FOR ACCESS
SELECT
	CAST(PREV.LOWER_BOUND AS VARCHAR(10)) || ' to ' || CAST(PREV.UPPER_BOUND AS VARCHAR(10)) AS score_range
	,PREV.LOWER_BOUND as lower_bound
	,PREV.UPPER_BOUND as upper_bound
	,CAST(PREV.expected_pct AS DECIMAL(32,2)) AS expected_pct
	,CAST(COALESCE(NEXT_1.next_pct1,0) AS DECIMAL(32,2)) as q1_2017
	,CAST(COALESCE(NEXT_2.next_pct2,0) AS DECIMAL(32,2)) as q2_2017
	,CAST(COALESCE(NEXT_3.next_pct3,0.00) AS DECIMAL(32,2)) as q3_2017
	,CAST(COALESCE(NEXT_4.next_pct4,0.00) AS DECIMAL(32,2)) as q4_2017
FROM
(
	SELECT
		SCORE_GRP.Q
		,SCORE_GRP.LOWER_BOUND
		,SCORE_GRP.UPPER_BOUND
		,PREV.PREV_YEAR
		,PREV.PREV_QUARTER
		,PREV.PREV_DATE
		,COALESCE(PREV.ACCT_COUNT,0) as prev_tot_count
		,COUNT(PREV.ACCT_ID) as prev_curr_count
		,COALESCE((CAST(prev_curr_count AS DECIMAL(32,4)) / NULLIFZERO(CAST(prev_tot_count AS DECIMAL(32,4)))) * 100 ,0) as expected_pct	
	FROM GERMAN.TBL_BASE_SCORE SCORE_GRP

	LEFT JOIN
	(

		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS PREV_YEAR
			,CAL.QUARTER_OF_YEAR AS PREV_QUARTER
			,PREV.YEAR_MONTH AS PREV_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS PREV_DATE
			,PREV.SCORE AS PREV_SCORE
			,ACCT_CNT.ACCT_COUNT
		FROM GERMAN.tbl_account_score PREV
		JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			WHERE YEAR_MONTH = 201612
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	ON PREV.PREV_SCORE >= SCORE_GRP.LOWER_BOUND
	AND PREV.PREV_sCORE <= SCORE_GRP.UPPER_BOUND

	GROUP BY 1,2,3,4,5,6,7
) PREV

LEFT JOIN 
(
	SELECT
		SCORE_GRP.Q
		,SCORE_GRP.LOWER_BOUND
		,SCORE_GRP.UPPER_BOUND
		,PREV.CURR_YEAR
		,PREV.CURR_QUARTER
		,PREV.CURR_DATE
		,COALESCE(PREV.ACCT_COUNT,0) as tot_count1
		,COUNT(PREV.ACCT_ID) as curr_count1
		,COALESCE((CAST(curr_count1 AS DECIMAL(32,4)) / NULLIFZERO(CAST(tot_count1 AS DECIMAL(32,4)))) * 100 ,0) as next_pct1
	FROM GERMAN.TBL_BASE_SCORE SCORE_GRP

	LEFT JOIN
	(

		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS CURR_YEAR
			,CAL.QUARTER_OF_YEAR AS CURR_QUARTER
			,PREV.YEAR_MONTH AS CURR_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS CURR_DATE
			,PREV.SCORE AS PREV_SCORE
			,ACCT_CNT.ACCT_COUNT
		FROM GERMAN.tbl_account_score PREV
		JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	ON PREV.PREV_SCORE >= SCORE_GRP.LOWER_BOUND
	AND PREV.PREV_sCORE <= SCORE_GRP.UPPER_BOUND

	GROUP BY 1,2,3,4,5,6,7
) NEXT_1
ON PREV.PREV_DATE = ADD_MONTHS(NEXT_1.CURR_DATE, -3)
AND PREV.Q = NEXT_1.Q

LEFT JOIN 
(
	SELECT
		SCORE_GRP.Q
		,SCORE_GRP.LOWER_BOUND
		,SCORE_GRP.UPPER_BOUND
		,PREV.CURR_YEAR
		,PREV.CURR_QUARTER
		,PREV.CURR_DATE
		,COALESCE(PREV.ACCT_COUNT,0) as tot_count2
		,COUNT(PREV.ACCT_ID) as curr_count2
		,COALESCE((CAST(curr_count2 AS DECIMAL(32,4)) / NULLIFZERO(CAST(tot_count2 AS DECIMAL(32,4)))) * 100 ,0) as next_pct2
	FROM GERMAN.TBL_BASE_SCORE SCORE_GRP

	LEFT JOIN
	(

		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS CURR_YEAR
			,CAL.QUARTER_OF_YEAR AS CURR_QUARTER
			,PREV.YEAR_MONTH AS CURR_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS CURR_DATE
			,PREV.SCORE AS PREV_SCORE
			,ACCT_CNT.ACCT_COUNT
		FROM GERMAN.tbl_account_score PREV
		JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	ON PREV.PREV_SCORE >= SCORE_GRP.LOWER_BOUND
	AND PREV.PREV_sCORE <= SCORE_GRP.UPPER_BOUND

	GROUP BY 1,2,3,4,5,6,7
) NEXT_2
ON PREV.PREV_DATE = ADD_MONTHS(NEXT_2.CURR_DATE, -6)
AND PREV.Q = NEXT_2.Q

LEFT JOIN 
(
	SELECT
		SCORE_GRP.Q
		,SCORE_GRP.LOWER_BOUND
		,SCORE_GRP.UPPER_BOUND
		,PREV.CURR_YEAR
		,PREV.CURR_QUARTER
		,PREV.CURR_DATE
		,COALESCE(PREV.ACCT_COUNT,0) as tot_count3
		,COUNT(PREV.ACCT_ID) as curr_count3
		,COALESCE((CAST(curr_count3 AS DECIMAL(32,4)) / NULLIFZERO(CAST(tot_count3 AS DECIMAL(32,4)))) * 100 ,0) as next_pct3
	FROM GERMAN.TBL_BASE_SCORE SCORE_GRP

	LEFT JOIN
	(

		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS CURR_YEAR
			,CAL.QUARTER_OF_YEAR AS CURR_QUARTER
			,PREV.YEAR_MONTH AS CURR_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS CURR_DATE
			,PREV.SCORE AS PREV_SCORE
			,ACCT_CNT.ACCT_COUNT
		FROM GERMAN.tbl_account_score PREV
		JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	ON PREV.PREV_SCORE >= SCORE_GRP.LOWER_BOUND
	AND PREV.PREV_sCORE <= SCORE_GRP.UPPER_BOUND

	GROUP BY 1,2,3,4,5,6,7
) NEXT_3
ON PREV.PREV_DATE = ADD_MONTHS(NEXT_3.CURR_DATE, -9)
AND PREV.Q = NEXT_3.Q

LEFT JOIN 
(
	SELECT
		SCORE_GRP.Q
		,SCORE_GRP.LOWER_BOUND
		,SCORE_GRP.UPPER_BOUND
		,PREV.CURR_YEAR
		,PREV.CURR_QUARTER
		,PREV.CURR_DATE
		,COALESCE(PREV.ACCT_COUNT,0) as tot_count4
		,COUNT(PREV.ACCT_ID) as curr_count4
		,COALESCE((CAST(curr_count4 AS DECIMAL(32,4)) / NULLIFZERO(CAST(tot_count4 AS DECIMAL(32,4)))) * 100 ,0) as next_pct4
	FROM GERMAN.TBL_BASE_SCORE SCORE_GRP

	LEFT JOIN
	(

		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS CURR_YEAR
			,CAL.QUARTER_OF_YEAR AS CURR_QUARTER
			,PREV.YEAR_MONTH AS CURR_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS CURR_DATE
			,PREV.SCORE AS PREV_SCORE
			,ACCT_CNT.ACCT_COUNT
		FROM GERMAN.tbl_account_score PREV
		JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	ON PREV.PREV_SCORE >= SCORE_GRP.LOWER_BOUND
	AND PREV.PREV_sCORE <= SCORE_GRP.UPPER_BOUND

	GROUP BY 1,2,3,4,5,6,7
) NEXT_4
ON PREV.PREV_DATE = ADD_MONTHS(NEXT_4.CURR_DATE, -9)
AND PREV.Q = NEXT_4.Q;
