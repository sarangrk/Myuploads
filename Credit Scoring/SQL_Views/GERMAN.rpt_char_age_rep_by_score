REPLACE VIEW GERMAN.rpt_char_age_rep_by_score
AS LOCKING ROW FOR ACCESS
SELECT
	year_month
	,LOWER_BOUND
	,UPPER_BOUND
	,COALESCE(SUM(Missing),0.00) AS missing
	,COALESCE(SUM(Others),0.00) as others
	,COALESCE(SUM(L_0),0.00) AS "0 - 25"
	,COALESCE(SUM(L_1),0.00) as "25 - 30"
	,COALESCE(SUM(L_2),0.00) as "30 - 35"
	,COALESCE(SUM(L_3),0.00) as "35 - 40"
	,COALESCE(SUM(L_4),0.00) as "40 - 50"
	,COALESCE(SUM(L_5),0.00) as "50 - 60"
	,COALESCE(SUM(L_6),0.00) as "60++"
FROM
(
	SELECT
		YEAR_MONTH
		,LOWER_BOUND
		,UPPER_BOUND
		,CASE WHEN BIN_ID = -2 THEN SUM(AGE_VS_BIN_PCT) END AS Missing
		,CASE WHEN BIN_ID = -1 THEN SUM(AGE_VS_BIN_PCT) END AS Others
		,CASE WHEN BIN_ID = 0 THEN SUM(AGE_VS_BIN_PCT) END AS L_0
		,CASE WHEN BIN_ID = 1 THEN SUM(AGE_VS_BIN_PCT) END AS L_1
		,CASE WHEN BIN_ID = 2 THEN SUM(AGE_VS_BIN_PCT) END AS L_2
		,CASE WHEN BIN_ID = 3 THEN SUM(AGE_VS_BIN_PCT) END AS L_3
		,CASE WHEN BIN_ID = 4 THEN SUM(AGE_VS_BIN_PCT) END AS L_4
		,CASE WHEN BIN_ID = 5 THEN SUM(AGE_VS_BIN_PCT) END AS L_5
		,CASE WHEN BIN_ID = 6 THEN SUM(AGE_VS_BIN_PCT) END AS L_6
	FROM
	(
		SELECT      
			SRC.YEAR_MONTH 
			,AGE.BIN_ID AS BIN_ID
			,CASE 
				WHEN AGE.BIN_ID = 0 AND AGE.LOWER_VAL IS NULL THEN '0 - ' || TRIM(AGE.HIGH_VAL)
				WHEN AGE.BIN_ID = (SELECT MAX(BIN_ID) FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS WHERE VARNAME='NUMAGE')
					AND AGE.LOWER_VAL IS NULL THEN TRIM(AGE.HIGH_VAL) || '++'
				ELSE TRIM(AGE.LOWER_VAL) || ' - ' || TRIM(AGE.HIGH_VAL)
			END AS LABEL 
			,SCORE.LOWER_BOUND
			,SCORE.UPPER_BOUND
			,COUNT(SRC.ACCT_ID) AS NUM_ACCT_SCR_BIN
			,AGE_COUNT.NUM_ACCT_BIN
			,CAST((CAST(NUM_ACCT_SCR_BIN AS DECIMAL(32,6)) / CAST(AGE_COUNT.NUM_ACCT_BIN AS DECIMAL(32,6))) * 100 AS DECIMAL(32,2)) AS AGE_VS_BIN_PCT
		FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS SRC      

		LEFT JOIN GERMAN.V_AGE_BIN AGE
		ON SRC.BIN_ID = AGE.BIN_ID

		LEFT JOIN 
		(
			SELECT
				WAM.ACCT_ID
				,WAM.YEAR_MONTH
				,WEM.LOWER_BOUND
				,WEM.UPPER_BOUND
			FROM GERMAN.TBL_ACCOUNT_SCORE WAM
				
			LEFT JOIN GERMAN.TBL_BASE_SCORE WEM
			ON CAST(WAM.SCORE AS INTEGER) BETWEEN WEM.LOWER_BOUND AND WEM.UPPER_BOUND
		) SCORE	
			
		ON SRC.YEAR_MONTH = SCORE.YEAR_MONTH
		AND SRC.ACCT_ID = SCORE.ACCT_ID

		LEFT JOIN 
		(
			SELECT
				SRC.YEAR_MONTH
				,SRC.BIN_ID
				,COUNT(SRC.ACCT_ID) AS NUM_ACCT_BIN
			FROM 
			(
				SELECT * 
				FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS
				WHERE VARNAME = 'NUMAGE'
			) SRC

			LEFT JOIN GERMAN.V_AGE_BIN AGE
			ON SRC.BIN_ID = AGE.BIN_ID

			GROUP BY 	
				SRC.YEAR_MONTH
				,SRC.BIN_ID
				,AGE.LABEL 
		) AGE_COUNT
		ON SRC.YEAR_MONTH = AGE_COUNT.YEAR_MONTH
		AND SRC.BIN_ID = AGE_COUNT.BIN_ID

		WHERE SRC.VARNAME = 'NUMAGE'

		GROUP BY 
			SRC.YEAR_MONTH
			,AGE.BIN_ID
			,AGE.LABEL
			,AGE.LOWER_VAL
			,AGE.HIGH_VAL
			,SCORE.LOWER_BOUND
			,SCORE.UPPER_BOUND
			,AGE_COUNT.NUM_ACCT_BIN
	) SRC
	GROUP BY 
		YEAR_MONTH
		,BIN_ID
		,LOWER_BOUND
		,UPPER_BOUND
) WAM 
GROUP BY 
	YEAR_MONTH
	,LOWER_BOUND
	,UPPER_BOUND;
