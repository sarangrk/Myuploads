

REPLACE VIEW GERMAN.rpt_stability_report
AS LOCKING ROW FOR ACCESS
SELECT
	CURR.CURR_YEAR_MONTH as actual_year_month
	,CAST(PREV.LOWER_BOUND AS INTEGER) as lower_bound
	,cast(PREV.UPPER_BOUND as integer) as upper_bound
	,CAST(PREV.EXPECTED_PCT AS DECIMAL(32,2)) as expected_pct
	,CAST(CURR.ACTUAL_PCT AS DECIMAL(32,2)) as actual_pct
	,CAST(CURR.ACTUAL_PCT - PREV.EXPECTED_PCT AS DECIMAL(32,4)) AS a_minus_e
	,CAST(CURR.ACTUAL_PCT / PREV.EXPECTED_PCT AS DECIMAL (32,4)) AS a_over_e
	,CAST(LN(CURR.ACTUAL_PCT / PREV.EXPECTED_PCT) AS DECIMAL(32,4)) AS ln_a_over_e
	,CAST((CURR.ACTUAL_PCT - PREV.EXPECTED_PCT) * (LN(CURR.ACTUAL_PCT / PREV.EXPECTED_PCT)) AS DECIMAL(32,4)) AS indx	
FROM
(
	SELECT
		PREV.Q
		,PREV.LOWER_BOUND
		,PREV.UPPER_BOUND
		,PREV.PREV_YEAR
		,PREV.PREV_QUARTER
		,PREV.PREV_YEAR_MONTH
		,PREV.PREV_DATE
		,PREV.ACCT_COUNT
		,CAST(CAST(BIN_COUNT AS DECIMAL(32,8)) / CAST(PREV.ACCT_COUNT AS DECIMAL(32,8)) * 100 AS DECIMAL(32,8)) AS EXPECTED_PCT
		,COUNT(PREV.ACCT_ID) AS BIN_COUNT
	FROM
	(
		SELECT     
			PREV.ACCT_ID
			,CAL.YEAR_OF_CALENDAR AS PREV_YEAR
			,CAL.QUARTER_OF_YEAR AS PREV_QUARTER
			,PREV.YEAR_MONTH AS PREV_YEAR_MONTH
			,CAST(CAST(PREV.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS PREV_DATE
			,PREV.SCORE AS PREV_SCORE
			,SCORE_GRP.Q
			,SCORE_GRP.LOWER_BOUND
			,SCORE_GRP.UPPER_BOUND
			,ACCT_CNT.ACCT_COUNT
		FROM       GERMAN.tbl_account_score PREV	
		INNER JOIN GERMAN.TBL_BASE_SCORE SCORE_GRP
		ON         PREV.score BETWEEN SCORE_GRP.lower_bound AND SCORE_GRP.upper_bound
		LEFT JOIN
		(
			SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
			FROM GERMAN.TBL_ACCOUNT_sCORE
			GROUP BY 1
		) ACCT_CNT
		ON PREV.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
		LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
		ON PREV.YEAR_MONTH = CAL.YEAR_MONTH
	) PREV
	where PREV.PREV_YEAR_MONTH = 201612

	GROUP BY 1,2,3,4,5,6,7,8
)PREV
LEFT JOIN
(
	SELECT
		CURR.Q
		,CURR.LOWER_BOUND
		,CURR.UPPER_BOUND
		,CURR.CURR_YEAR
		,CURR.CURR_QUARTER
		,CURR.CURR_YEAR_MONTH
		,CURR.CURR_DATE
		,CURR.ACCT_COUNT
		,CURR.ACTUAL_PCT
		,CURR.BIN_COUNT
	FROM
	(
		SELECT
			CURR.Q
			,CURR.LOWER_BOUND
			,CURR.UPPER_BOUND
			,CURR.CURR_YEAR
			,CURR.CURR_QUARTER
			,CURR.CURR_YEAR_MONTH
			,CURR.CURR_DATE
			,CURR.ACCT_COUNT
			,CAST(CAST(BIN_COUNT AS DECIMAL(32,8)) / CAST(CURR.ACCT_COUNT AS DECIMAL(32,8)) * 100 AS DECIMAL(32,8)) AS ACTUAL_PCT
			,COUNT(CURR.ACCT_ID) AS BIN_COUNT
		FROM
		(
			SELECT     
				CURR.ACCT_ID
				,CAL.YEAR_OF_CALENDAR AS CURR_YEAR
				,CAL.QUARTER_OF_YEAR AS CURR_QUARTER
				,CURR.YEAR_MONTH AS CURR_YEAR_MONTH
				,CAST(CAST(CURR.YEAR_MONTH AS VARCHAR(10)) || '01' AS DATE FORMAT 'YYYYMMDD') AS CURR_DATE
				,CURR.SCORE AS PREV_SCORE
				,SCORE_GRP.Q
				,SCORE_GRP.LOWER_BOUND
				,SCORE_GRP.UPPER_BOUND
				,ACCT_CNT.ACCT_COUNT
			FROM       GERMAN.tbl_account_score CURR	
			INNER JOIN GERMAN.TBL_BASE_SCORE SCORE_GRP
			ON         CURR.score BETWEEN SCORE_GRP.lower_bound AND SCORE_GRP.upper_bound
			LEFT JOIN
			(
				SELECT YEAR_MONTH, COUNT(ACCT_ID) AS ACCT_COUNT
				FROM GERMAN.TBL_ACCOUNT_sCORE
				GROUP BY 1
			) ACCT_CNT
			ON CURR.YEAR_MONTH=ACCT_CNT.YEAR_MONTH
			LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
			ON CURR.YEAR_MONTH = CAL.YEAR_MONTH
		) CURR 
		where CURR.CURR_YEAR_MONTH <> 201612
		
		GROUP BY 1,2,3,4,5,6,7,8
	) CURR
)CURR
ON PREV.Q = CURR.Q
--AND PREV.PREV_YEAR_MONTH <> CURR.CURR_YEAR_MONTH
WHERE CURR.ACTUAL_PCT IS NOT NULL;
