REPLACE VIEW GERMAN.rpt_scorecard_characteristics
AS LOCKING ROW FOR ACCESS
SELECT 
	ACTUAL.YEAR_MONTH AS actual_year_month
	,PREV.VARNAME as varname
	,CASE WHEN PREV.VARNAME = 'NUMAGE'
		THEN
			CASE WHEN PREV.BIN_ID = 0 AND PREV.LOWER_VAL IS NULL THEN '0 - ' || TRIM(PREV.HIGH_VAL)
				WHEN PREV.BIN_ID = (SELECT MAX(BIN_ID) FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS WHERE VARNAME='NUMAGE')
					AND PREV.LOWER_VAL IS NULL THEN TRIM(PREV.HIGH_VAL) || '++'
				ELSE TRIM(PREV.LOWER_VAL) || ' - ' || TRIM(PREV.HIGH_VAL)
			END
		ELSE INITCAP(PREV.LABEL)
	END	AS label
	,PREV.EXPECTED_PCT as expected_pct
	,ACTUAL.ACTUAL_PCT as actual_pct
	,CAST(POINTS.SCORE AS INTEGER) AS points
	,((ACTUAL.ACTUAL_PCT - PREV.EXPECTED_PCT ) * POINTS.SCORE) / 100 AS indx
FROM
(
	SELECT     
		PREV.YEAR_MONTH
		,CAL.YEAR_OF_CALENDAR
		,CAL.QUARTER_OF_YEAR
		,CAL.CALENDAR_DATE
		,CAST(TRIM(PREV.BIN_ID) AS SMALLINT) AS BIN_ID
		,PREV.VARNAME
		,AGE.LOWER_VAL
		,AGE.HIGH_VAL
		,BINS.LABEL AS LABEL
		,ACCT_COUNT.ACCOUNT_COUNT AS COUNT_PER_QTR
		,COUNT(PREV.ACCT_ID) AS EXPECTED_COUNT
		,CAST((CAST(EXPECTED_COUNT AS DECIMAL(32,4)) / CAST(COUNT_PER_QTR AS DECIMAL(32,4))) * 100 AS DECIMAL(32,2)) AS EXPECTED_PCT
		
	FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS PREV      

--SELECT * FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS
	LEFT JOIN GERMAN.TBL_ACCOUNT_SCORE ACT_SCORE
	ON PREV.ACCT_ID = ACT_SCORE.ACCT_ID
	AND PREV.YEAR_MONTH = ACT_SCORE.YEAR_MONTH
	
	LEFT JOIN GERMAN.TBL_VAR_FINE_BINS BINS
	ON PREV.BIN_ID = BINS.BIN_ID
	AND BINS.VARNAME = PREV.VARNAME
	
	LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
	ON PREV.YEAR_MONTH=CAL.YEAR_MONTH

	LEFT JOIN 
	(
		SELECT
			YEAR_MONTH
			,COUNT(ACCT_ID) AS ACCOUNT_COUNT
		FROM GERMAN.TBL_ACCOUNT_SCORE
		GROUP BY 1
	) ACCT_COUNT
	ON PREV.YEAR_MONTH = ACCT_COUNT.YEAR_MONTH
	
	LEFT JOIN GERMAN.V_AGE_BIN AGE
	ON PREV.BIN_ID = AGE.BIN_ID
	AND PREV.VARNAME = 'NUMAGE'

	WHERE PREV.VARNAME IN('quaHousing','quaEmploy','NUMAGE')
	AND PREV.YEAR_MONTH = '201612'

	GROUP BY 1,2,3,4,5,6,7,8,9,10
) PREV
LEFT JOIN
(
	SELECT     
		ACTUAL.YEAR_MONTH
		,CAL.YEAR_OF_CALENDAR
		,CAL.QUARTER_OF_YEAR
		,CAL.CALENDAR_DATE
		,CAST(TRIM(ACTUAL.BIN_ID) AS SMALLINT) AS BIN_ID
		,BINS.VARNAME
		,AGE.LOWER_VAL
		,AGE.HIGH_VAL
		,BINS.LABEL AS LABEL
		,ACCT_COUNT.ACCOUNT_COUNT AS COUNT_PER_QTR
		,COUNT(ACTUAL.ACCT_ID) AS ACTUAL_COUNT
		,CAST((CAST(ACTUAL_COUNT AS DECIMAL(32,4)) / CAST(COUNT_PER_QTR AS DECIMAL(32,4))) * 100 AS DECIMAL(32,2)) AS ACTUAL_PCT
	FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS ACTUAL      

--SELECT * FROM GERMAN.TBL_ACCOUNT_SCORING_FINE_BINS
	LEFT JOIN GERMAN.TBL_ACCOUNT_SCORE ACT_SCORE
	ON ACTUAL.ACCT_ID = ACT_SCORE.ACCT_ID
	AND ACTUAL.YEAR_MONTH = ACT_SCORE.YEAR_MONTH
	
	LEFT JOIN GERMAN.TBL_VAR_FINE_BINS BINS
	ON ACTUAL.BIN_ID = BINS.BIN_ID
	AND BINS.VARNAME = ACTUAL.VARNAME
	
	LEFT JOIN GERMAN.CAL_YEAR_MONTH CAL
	ON ACTUAL.YEAR_MONTH=CAL.YEAR_MONTH

	LEFT JOIN 
	(
		SELECT
			YEAR_MONTH
			,COUNT(ACCT_ID) AS ACCOUNT_COUNT
		FROM GERMAN.TBL_ACCOUNT_SCORE
		GROUP BY 1
	) ACCT_COUNT
	ON ACTUAL.YEAR_MONTH = ACCT_COUNT.YEAR_MONTH
	
	LEFT JOIN GERMAN.V_AGE_BIN AGE
	ON ACTUAL.BIN_ID = AGE.BIN_ID
	AND ACTUAL.VARNAME = 'NUMAGE'
	
	WHERE ACTUAL.VARNAME IN('quaHousing','quaEmploy','NUMAGE')
	--AND ACTUAL.YEAR_MONTH = '201612'

	GROUP BY 1,2,3,4,5,6,7,8,9,10
) ACTUAL
ON PREV.VARNAME = ACTUAL.VARNAME
AND PREV.BIN_ID = ACTUAL.BIN_ID
AND PREV.YEAR_MONTH <> ACTUAL.YEAR_MONTH
--ADD_MONTHS(PREV.CALENDAR_DATE,3) = ACTUAL.CALENDAR_DATE

LEFT JOIN 
(
	SELECT * FROM GERMAN.TBL_SEG_SCORECARD
	WHERE VARNAME  IN ('quaHousing','quaEmploy','NUMAGE')
	QUALIFY ROW_NUMBER() OVER(PARTITION BY VARNAME,OLD_BIN_ID ORDER BY SEGMENT_GROUP DESC) = 1
) POINTS

ON PREV.VARNAME = POINTS.VARNAME
AND PREV.BIN_ID = POINTS.OLD_BIN_ID;
