% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimisation_pipeline.R
\name{price_optimisation}
\alias{price_optimisation}
\title{Applies a price optimisation on top of fitted Prophet models}
\usage{
price_optimisation(workflow, list_models, cores, optimisation_id, ...)
}
\arguments{
\item{workflow, }{a ModelWorkflow() object of the package dmmfR, with the fitted Prophet models}

\item{cores}{number of processor cores to run over}

\item{optim_params}{list with parameters to take into consideration:
#' @param optim_params list with parameters to take into consideration:
- opt_var: character with the variable to optimise, it needs to be added as a regressor;
- logged_price: boolean stating if the price variable is logged or the raw price;
- logged_sales: boolean indicating if the target variable is Demand or the given y, ie log(Sales+1)
- sim_time_units: number of timepoints in future to apply the optimisation to (not used if use_test_data == FALSE);
- use_test_data: Boolean indicating if you use the test dataset or predict sim_time_unit timepoints forward
- min_price_ratio: numeric value specifying the constraint of the minimum price as a ratio of the product cost.
   - if min_price_ratio = 0.6 then minimum price will be cost*0.6
- max_price_ratio: numeric value specifying the constraint of the maximum price as a ratio of the base price of the product.
   - if  max_price_ratio = 1.5 then the maximum price will be max( actual price) * 1.5}

\item{attempt_id}{character string id for the optimisation run}
}
\value{
a data.frame with the results of the optimisation. In case of error returns the erros message
}
\description{
Applies a price optimisation on top of fitted Prophet models
}
\seealso{
optimisation_model_fn
}
