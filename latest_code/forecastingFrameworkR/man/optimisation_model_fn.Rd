% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimisation_model_fn.R
\name{optimisation_model_fn}
\alias{optimisation_model_fn}
\title{Applies a price optimisation on top of fitted Prophet models}
\usage{
optimisation_model_fn(model_name, workflow, min_price_ratio, max_price_ratio,
  use_test_data = FALSE, sim_time_units = 6, time_unit = "days",
  start_time = NULL, target_sales_lst = list(), base_price = NULL,
  base_cost = NULL, cost_col = "COST", price_col = "PRICE",
  sales_col = "SALES", extra_regressors = data.frame())
}
\arguments{
\item{model_name}{character with the model name to apply the optimisation, <Product>__<Shop>}

\item{workflow, }{a ModelWorkflow() object of the package dmmfR, with the fitted Prophet models}

\item{sim_time_units:}{number of timepoints in future to apply the optimisation to (not used if use_test_data == FALSE);}

\item{time_unit:}{unit argument for difftime function to generate the future timstamps.
- Could be any of those values: c("auto", "secs", "mins", "hours","days", "weeks")
- Only used when use_test_data == FALSE and start_time is provided.}

\item{start_time:}{a Date or POSIXct specifying the starting time for the simulation. Only used if use_test_data == FALSE.
- If not provided then the future timestamps are generated using prophet::make_future_dataframe()}

\item{use_test_data:}{Boolean indicating if you use the test dataset or predict sim_time_unit timepoints forward}

\item{min_price_ratio:}{numeric value specifying the constraint of the minimum price as a ratio of the product cost.
- if min_price_ratio = 0.6 then minimum price will be cost*0.6}

\item{max_price_ratio:}{numeric value specifying the constraint of the maximum price as a ratio of the base price of the product.
- if  max_price_ratio = 1.5 then the maximum price will be base price * 1.5}

\item{base_price:}{numeric value of the base price of the product.}

\item{base_cost:}{numeric value of the base cost of the product.}

\item{cost_col:}{character string specifying the column for cost, default is "COST". Only used if base_cost is not provided.}

\item{price_col:}{character string specifying the column for price, default is "PRICE". Only used if base_price is not provided.}

\item{sales_col:}{character string specifying the column for sales, default is "SALES"}

\item{target_sales_lst:}{named list, specifying the target sales for the given model, default is an empty list.
The names of the list is the different model names.
- if model_name is not one of the entries of target_sales_lst, then the optimisation problem will be unconstrained
and the optimisation target will be profit= `sum(units_sold * price) - (units_sold * unit_cost)`
- if model_name is one of the entries of target_sales_lst, then the optimisation problem is constrained to the available stock
and the optimisation target will be revenue= `sum(units_sold * price)`}

\item{extra_regressors:}{data.frame with the values of the extra regressors for the simulation.
- The number of rows should be sim_time_units
- And each column represents one extra regressor
If no regressors then provide an empty data.frame.}
}
\value{
a data.frame with the results of the optimisation. In case of error returns the erros message
}
\description{
This function will optimise the price for a given model, <Product>__<Shop>, from the models attribute within the ModelWorkflow object provided.
The optimisation takes several parameters to optimise according to the fitted model and also to the user specifications
}
