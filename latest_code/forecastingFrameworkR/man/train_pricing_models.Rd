% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_pricing_models.R
\name{train_pricing_models}
\alias{train_pricing_models}
\title{Trains prophet models giving optimisation parameters. Used to try different attempts in fiding the best solution.}
\usage{
train_pricing_models(df, attempt_id, data_path = "data-raw",
  opt_var = "log_price", target_var = "log_sales",
  grouping_variables = c("PRODUCT", "SHOP"), cores_nr = 1,
  logged_sales = ifelse(target_var == "log_sales", TRUE, FALSE),
  logged_price = ifelse(opt_var == "log_price", TRUE, FALSE),
  test_from = as.Date("2017-10-01"))
}
\arguments{
\item{df}{data.frame with the data to be trained and tested}

\item{attempt_id}{an identifier of the attempt to save the results.}

\item{data_path}{chracter indicating where to find the data and where to save the particular data for the attempt}

\item{cores_nr}{integer indicating the number of cores used in the workflow object to train the models}

\item{optim_params}{list with parameters to take into consideration:
- opt_var: character with the variable to optimise, it needs to be added as a regressor;
- logged_price: boolean stating if the price variable is logged;
- logged_sales: boolean indicating if the target variable is Demand or the given y, ie log(Sales+1)}
}
\value{
a ModelWorkflow object from dmmfR package with the fitted models across Products and Shops
}
\description{
This function allows to train models trying different parameters, such as if the target variable should be logged or not.
To then consolidate all the results and make a decision of what is the best approach.
}
